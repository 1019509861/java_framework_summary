server:
  port: 8081
  servlet:
    context-path: /
    session:
      timeout: 30   # session 超时时间
      #cookie:
        #http-only: true   # true 表示浏览器脚本无法访问 cookie
        #secure: true      # true 表示 cookie 仅通过 https 传输
# 数据源配置
spring:
  thymeleaf:
    mode: HTML
    encoding: UTF-8
    cache: false
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    username: root
    password: root
    url: jdbc:mysql://localhost:3306/all_framework?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
    driverClassName: com.mysql.cj.jdbc.Driver
  # RabbitMQ
  rabbitmq:
    # 服务连接配置
    addresses: 127.0.0.1:5672
    username: guest
    password: guest
    virtual-host: /
    connection-timeout: 15000
    # 消费端配置
    listener:
      simple:
        # 默认存在多少消费者
        concurrency: 5
        # 最多存在多少消费者
        max-concurrency: 10
        # 设置同时处理多少条消息
        prefetch: 1
        # 消费端应答模式，auto：自动 manual：手动 none：不应答
        acknowledge-mode: manual
    # 采用消息确认模式，开启后异步等待消息响应结果
    # 表示开启消息回调，如果交换机匹配不到队列，则调用 ReturnCallBack
    publisher-returns: true
    # 表示开启消息回调，如果消息没有投递到 MQ Broker，即交换机上，则调用 ConfirmCallBack
    publisher-confirm-type: correlated
    template:
      # 表示交换机无法通过自身类型与路由键匹配到队列时，通过回调函数返回消息给生产者，false：消息丢弃
      mandatory: true
  http:
    encoding:
      charset: UTF-8
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  application:
    name: summary-service
#    default-property-inclusion: non_null

# Eureka
#eureka:
#  client:
#    service-url:
#      defaultZone: http://localhost:8080/eureka
#  instance:
#    prefer-ip-address: true
#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}

# feign 配置
#feign:
#  hystrix:
#    enabled: true
#  compression:
#    request:
#      enabled: true
#      # mime-types[0]: text/xml
#      # mime-types[1]: application/xml
#      mime-types: application/json
#      min-request-size: 2048
#    response:
#      enabled: true

# endpoint 配置
management:
  endpoints:
    web:
      exposure:
        include: refresh,health,info,env

# MyBatis
mybatis-plus:
  # 搜索指定包别名
  typeAliasesPackage: com.demo.allframework
  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  mapperLocations: classpath:mybatis/mapper/*mapper.xml
  # 加载全局的配置文件，可以选择在 mybatis-config 配置并指定文件
  # configLocation: classpath:mybatis/mybatis-config.xml
  # 也可以在 application 直接配置
  configuration:
    # 驼峰式命名
    map-underscore-to-camel-case: true
    # 全局映射器启用缓存
    cache-enabled: true
    # 允许 JDBC 支持自动生成主键
    use-generated-keys: true
    # 配置默认的执行器
    default-executor-type: reuse
    # 指定 MyBatis 所用日志的具体实现
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl
  global-config:
    db-config:
      id-type: auto   # 数据库 ID 自增
# log 日志配置
logging:
#  pattern:
#    console: "%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger: %msg%n"
#    file: "%d{yyyy/MM/dd-HH:mm} [%thread] %-5level %logger: %msg%n"
  file:
    path: D:/logs
    name: D:/logs/allframework
  level:
    com.demo.allframework: debug
  config: classpath:logback-spring.xml

